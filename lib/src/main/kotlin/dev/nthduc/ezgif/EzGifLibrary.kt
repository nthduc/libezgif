/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.nthduc.ezgif

import io.ktor.client.*
import io.ktor.client.request.*
import io.ktor.client.request.forms.*
import io.ktor.client.statement.*
import org.jsoup.Jsoup


class EzGifLibrary {
    private val client = HttpClient()

    private suspend fun convert(source: String, conversionType: String): String {
        val getUrl = client.get("https://ezgif.com/$conversionType?url=$source")
        val postUrl = getUrl.request.url.toString()
        val parts = postUrl.split('/')
        val lastPart = parts.last()

        val res = client.submitFormWithBinaryData(
            url = "https://ezgif.com/$conversionType/$lastPart?ajax=true",
            formData = formData {
                append("file", lastPart)
                if (lastPart.endsWith(".mp4")) {
                    append("start", "0")
                    append("end", "4")
                    append("size", "original")
                    append("fps", "10")
                    append("method", "ffmpeg")
                }
            },
        )

        val document = Jsoup.parse(res.bodyAsText())
        val saveUrl = document.select("p.outfile img").attr("src")

        return "https:$saveUrl"
    }

    suspend fun webp2gif(source: String) = convert(source, "webp-to-gif")
    suspend fun jpg2webp(source: String) = convert(source, "jpg-to-webp")
    suspend fun png2webp(source: String) = convert(source, "png-to-webp")
    suspend fun gif2webp(source: String) = convert(source, "gif-to-webp")

    suspend fun webp2png(source: String) = convert(source, "webp-to-png")

    suspend fun video2gif(source: String) = convert(source, "video-to-gif")
    suspend fun video2webp(source: String) = convert(source, "video-to-webp")



}
